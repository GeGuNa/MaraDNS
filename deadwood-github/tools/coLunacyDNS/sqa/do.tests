#!/bin/sh

# We need to be root to bind to port 53
if ! id | grep root > /dev/null 2>&1 ; then
        echo the tests must be run as a root user
        exit 1
fi

if [ "$1" = "--help" ] ; then	
	echo Usage: $0 to run all tests 
	echo $0 --stop to stop if a test fails
	exit 0
fi

HERE="$(/bin/pwd)"
rm ../coLunacyDNS
cd ..
make clean
cd ../../lunacy ; make CFLAGS="-g -fprofile-arcs -ftest-coverage"
cd ../tools/coLunacyDNS/
make CFLAGS="-g -DTEST -DGCOV -fprofile-arcs -ftest-coverage"
echo coLunacyDNS compiled in test mode
cd "$HERE"
if [ "$1" = "--compile" ] ; then
	echo coLunacyDNS compiled for tests
	exit 0
fi

DoStop=""
if [ "$1" = "--stop" ] ; then
	DoStop="1"
fi

# Test underlying libs
TESTS="sqa_rg32"
TESTS=$TESTS" sqa_ip6Parse"
TESTS=$TESTS" sqa_halfsip13"
# Test Lua config files in README.md
# Note: We only use a given localhost IP once for all tests so we
# do not need one-minute waits for FIN_WAIT to finally close up
TESTS=$TESTS" sqa_oneanswer" # 127.7.7.1
TESTS=$TESTS" sqa_getupstream" # 127.7.7.2 and 127.7.7.3
TESTS=$TESTS" sqa_twoanswers" # 127.7.7.4
TESTS=$TESTS" sqa_twoupstreams" # 127.7.7.5, 127.7.7.6, and 127.7.7.7
TESTS=$TESTS" sqa_blocklist" # 127.7.7.8 and 127.7.7.9
TESTS=$TESTS" sqa_servfail" # 127.7.7.10
TESTS=$TESTS" sqa_ignoreme" # 127.7.7.11
TESTS=$TESTS" sqa_refused" # 127.7.7.12 and 127.7.7.13 (no server)
TESTS=$TESTS" sqa_complex" # 127.7.7.14 to 127.7.7.17 
TESTS=$TESTS" sqa_timeout" # 127.7.7.18 and 127.7.7.19
TESTS=$TESTS" sqa_any" # 127.7.7.20
TESTS=$TESTS" sqa_args" # 127.7.7.21
TESTS=$TESTS" sqa_ip6" # 127.7.7.22 and ::1
TESTS=$TESTS" sqa_ip6bad" # 127.7.7.23
TESTS=$TESTS" sqa_file" # 127.7.7.24 and 127.7.7.25
TESTS=$TESTS" sqa_badsolve" # 127.7.7.26
TESTS=$TESTS" sqa_flipcase" # 127.7.7.27 and 127.7.7.28
TESTS=$TESTS" sqa_execve" # No IPs used 
TESTS=$TESTS" sqa_badBindIP" # No IPs used 
TESTS=$TESTS" sqa_nobindIP" # 0.0.0.0 (for test)
FAIL=""

for test in $TESTS ; do
	echo Test $test
	cd $test
	if ! ./do.test ; then
		FAIL=${FAIL}${test}" "
		if [ ! -z "$DoStop" ] ; then
			echo Stopping tests because of test failure
			exit 1
		fi
	fi
	cd "$HERE"
	cd ..
	rm -f coLunacyDNS.c.gcov
	echo This is coverage for all tests done so far:
	gcov coLunacyDNS.c
	cd "$HERE"
done
if [ -z "$FAIL" ] ; then
	cd "$HERE"
	echo All tests successful
	exit 0
fi
echo Test failures: ${FAIL}
exit 1
